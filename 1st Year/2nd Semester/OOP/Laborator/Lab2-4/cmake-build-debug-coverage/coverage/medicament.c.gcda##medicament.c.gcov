        -:    0:Source:C:/Users/munte/CLionProjects/OOP-lab2-4/medicament.c
        -:    0:Graph:C:\Users\munte\CLionProjects\OOP-lab2-4\cmake-build-debug-coverage\CMakeFiles\OOP_lab2_4.dir\medicament.c.gcno
        -:    0:Data:C:\Users\munte\CLionProjects\OOP-lab2-4\cmake-build-debug-coverage\CMakeFiles\OOP_lab2_4.dir\medicament.c.gcda
        -:    0:Runs:1
        -:    1:#include "medicament.h"
        -:    2:#include <stdlib.h>
        -:    3:#include <string.h>
        -:    4:
function createMedicament called 61 returned 100% blocks executed 100%
       61:    5:Medicament* createMedicament(int id, char* nume, float concentratie, int stoc)
        -:    6:{
       61:    7:    Medicament* p =(Medicament*) malloc(sizeof(Medicament));
        -:    8:
       61:    9:    p->id = id;
        -:   10:
       61:   11:    int nr = (int)strlen(nume) + 1;
       61:   12:    p->nume = (char*)malloc(sizeof(char)*nr);
       61:   13:    strcpy(p->nume, nume);
        -:   14:
       61:   15:    p->concentratie = concentratie;
       61:   16:    p->stoc = stoc;
        -:   17:
       61:   18:    return p;
       61:   18-block  0
        -:   19:}
        -:   20:
function copyMedicament called 89 returned 100% blocks executed 100%
       89:   21:Medicament* copyMedicament(Medicament* m)
        -:   22:{
       89:   23:    Medicament *p = (Medicament*) malloc(sizeof(Medicament));
       89:   24:    p->id = m->id;
       89:   25:    p->nume = (char*)malloc(sizeof(char)*(strlen(m->nume)+1));
       89:   26:    strcpy(p->nume,m->nume);
       89:   27:    p->concentratie = m->concentratie;
       89:   28:    p->stoc = m->stoc;
        -:   29:
       89:   30:    return p;
       89:   30-block  0
        -:   31:}
        -:   32:
        -:   33:
function destroyMedicament called 150 returned 100% blocks executed 100%
      150:   34:void destroyMedicament(Medicament* p)
        -:   35:{
      150:   36:    free(p->nume);
      150:   37:    free(p);
      150:   38:}
        -:   39:
        -:   40:
function getId called 15 returned 100% blocks executed 100%
       15:   41:int getId(Medicament* p)
        -:   42:{
       15:   43:    return p->id;
       15:   43-block  0
        -:   44:}
        -:   45:
        -:   46:/*
        -:   47:char* getNume(Medicament* p)
        -:   48:{
        -:   49:    return p->nume;
        -:   50:}
        -:   51:*/
function getStoc called 32 returned 100% blocks executed 100%
       32:   52:int getStoc(Medicament* p)
        -:   53:{
       32:   54:    return p->stoc;
       32:   54-block  0
        -:   55:}
        -:   56:
function getConcentratie called 5 returned 100% blocks executed 100%
        5:   57:int getConcentratie(Medicament* p)
        -:   58:{
        5:   59:    return p->concentratie;
        5:   59-block  0
        -:   60:}
        -:   61:/*
        -:   62:float getConcentratie(Medicament* p)
        -:   63:{
        -:   64:    return p->concentratie;
        -:   65:}
        -:   66:*/
function setStoc called 2 returned 100% blocks executed 100%
        2:   67:void setStoc(Medicament* p,int stoc)
        -:   68:{
        2:   69:    p->stoc = stoc;
        2:   70:}
        -:   71:
function valideazaMedicament called 36 returned 100% blocks executed 100%
       36:   72:int valideazaMedicament(Medicament* m)
        -:   73:{
       36:   74:    if(m->id<=0)
       36:   74-block  0
branch  0 taken 2 (fallthrough)
branch  1 taken 34
        2:   75:        return -1;
        2:   75-block  0
       34:   76:    if(m->stoc<=0)
       34:   76-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 33
        1:   77:        return -1;
        1:   77-block  0
       33:   78:    if(strlen(m->nume)<2)
       33:   78-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 32
        1:   79:        return -1;
        1:   79-block  0
       32:   80:    if(m->concentratie<=0)
       32:   80-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 31
        1:   81:        return -1;
        1:   81-block  0
        -:   82:
       31:   83:    return 1;
       31:   83-block  0
        -:   84:}
        -:   85:
function getNume called 24 returned 100% blocks executed 100%
       24:   86:char* getNume(Medicament* m)
        -:   87:{
       24:   88:    return m->nume;
       24:   88-block  0
        -:   89:}
