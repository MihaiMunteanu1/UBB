        -:    0:Source:C:/Users/munte/CLionProjects/OOP-lab2-4/ui.c
        -:    0:Graph:C:\Users\munte\CLionProjects\OOP-lab2-4\cmake-build-debug-coverage\CMakeFiles\OOP_lab2_4.dir\ui.c.gcno
        -:    0:Data:C:\Users\munte\CLionProjects\OOP-lab2-4\cmake-build-debug-coverage\CMakeFiles\OOP_lab2_4.dir\ui.c.gcda
        -:    0:Runs:1
        -:    1:#include <stdio.h>
        -:    2:#include "medicament.h"
        -:    3:#include "myList.h"
        -:    4:#include "service.h"
        -:    5:#include "ui.h"
        -:    6:#include "teste.h"
function updateMed called 0 returned 0% blocks executed 0%
    #####:    7:void updateMed(Farmacie* list)
        -:    8:{
    #####:    9:    printf("Introduceti Id-ul:\n");
    %%%%%:    9-block  0
call    0 never executed
        -:   10:    int id;
    #####:   11:    scanf("%d",&id);
call    0 never executed
    #####:   12:    printf("Introduceti noua concentratie:\n");
call    0 never executed
        -:   13:    float concentratie;
    #####:   14:    scanf("%f",&concentratie);
call    0 never executed
    #####:   15:    printf("Introducceti noul nume:\n");
call    0 never executed
        -:   16:    char nume[30];
    #####:   17:    scanf("%s",nume);
call    0 never executed
    #####:   18:    if (!updateEnt(list,id,nume,concentratie))
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:   19:        printf("Modificarea a avut loc cu succes!\n");
    %%%%%:   19-block  0
call    0 never executed
        -:   20:    else
    #####:   21:        printf("Medicamentul cu id-ul dat nu exista!\n");
    %%%%%:   21-block  0
call    0 never executed
        -:   22:
    #####:   23:}
function readMed called 0 returned 0% blocks executed 0%
    #####:   24:void readMed(Farmacie* list)
        -:   25:{
    #####:   26:    printf("Introduceti id:\n");
    %%%%%:   26-block  0
call    0 never executed
    #####:   27:    int id=-1;
    #####:   28:    scanf("%d",&id);
call    0 never executed
    #####:   29:    if (!checkId(list, id))
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
        -:   30:    {
    #####:   31:        printf("Introduceti nume:\n");
    %%%%%:   31-block  0
call    0 never executed
        -:   32:        char nume[30];
    #####:   33:        scanf("%s", nume);
call    0 never executed
    #####:   34:        printf("Introduceti concentratie:\n");
call    0 never executed
        -:   35:        float concentratie;
    #####:   36:        scanf("%f", &concentratie);
call    0 never executed
    #####:   37:        printf("Introduceti stoc:\n");
call    0 never executed
        -:   38:        int stoc;
    #####:   39:        scanf("%d", &stoc);
call    0 never executed
        -:   40:
    #####:   41:        if(addEnt(list, id, nume, concentratie, stoc))
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:   42:            printf("Produsul a fost adaugat cu succes!\n");
    %%%%%:   42-block  0
call    0 never executed
        -:   43:        else
    #####:   44:            printf("Medicament invalid!\n");
    %%%%%:   44-block  0
call    0 never executed
        -:   45:    }
        -:   46:    else
        -:   47:    {
    #####:   48:        addStoc(list, id);
    %%%%%:   48-block  0
call    0 never executed
    #####:   49:        printf("Stocul a fost actualizat cu succes!\n");
call    0 never executed
        -:   50:    }
        -:   51:
        -:   52:
    #####:   53:}
        -:   54:
function printFarmacie called 0 returned 0% blocks executed 0%
    #####:   55:void printFarmacie(Farmacie* list)
        -:   56:{
    #####:   57:    if(list->lista->dimensiune == 0)
    %%%%%:   57-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
        -:   58:    {
    #####:   59:        printf("Nu exista medicamente in farmacie!\n");
    %%%%%:   59-block  0
call    0 never executed
    #####:   60:        return;
        -:   61:    }
        -:   62:    else{
    #####:   63:        for(int i = 0; i< list->lista->dimensiune;i++)
    %%%%%:   63-block  0
    %%%%%:   63-block  1
branch  0 never executed
branch  1 never executed (fallthrough)
        -:   64:        {
    #####:   65:            Medicament* m = get(list->lista,i);
    %%%%%:   65-block  0
call    0 never executed
    #####:   66:            printf("Id: %d; Nume: %s; Concentratie: %f; Stoc: %d\n",m->id,m->nume,m->concentratie,m->stoc);
call    0 never executed
        -:   67:        }
        -:   68:    }
        -:   69:}
        -:   70:
function deleteMed called 0 returned 0% blocks executed 0%
    #####:   71:void deleteMed(Farmacie* list)
        -:   72:{
    #####:   73:    printf("Id-ul medicamentului pe care doriti sa il stergeti:\n");
    %%%%%:   73-block  0
call    0 never executed
        -:   74:    int id;
    #####:   75:    scanf("%d",&id);
call    0 never executed
    #####:   76:    if(!deleteEnt(list,id))
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:   77:        printf("Acest medicament nu exista!\n");
    %%%%%:   77-block  0
call    0 never executed
        -:   78:    else
    #####:   79:        printf("Medicament sters cu succes!\n");
    %%%%%:   79-block  0
call    0 never executed
    #####:   80:}
function destroy called 1 returned 100% blocks executed 100%
        1:   81:void destroy(Farmacie *list)
        -:   82:{
        1:   83:    destroyAll(list);
        1:   83-block  0
call    0 returned 1
        1:   84:}
        -:   85:
function sortNumeCresc called 0 returned 0% blocks executed 0%
    #####:   86:void sortNumeCresc(Farmacie* list)
        -:   87:{
    #####:   88:    List* f = sortareNume(list);
    %%%%%:   88-block  0
call    0 never executed
    #####:   89:    for(int i=0;i<f->dimensiune;i++)
    %%%%%:   89-block  0
branch  0 never executed
branch  1 never executed (fallthrough)
        -:   90:    {
    #####:   91:        Medicament* m = get(f,i);
    %%%%%:   91-block  0
call    0 never executed
    #####:   92:        printf("Id: %d; Nume: %s; Concentratie: %f; Stoc: %d\n", m->id, m->nume,m->concentratie, m->stoc);
call    0 never executed
        -:   93:    }
        -:   94:
    #####:   95:    destroyList(f);
    %%%%%:   95-block  0
call    0 never executed
        -:   96:
    #####:   97:}
        -:   98:
function sortNumeDesc called 0 returned 0% blocks executed 0%
    #####:   99:void sortNumeDesc(Farmacie* list)
        -:  100:{
    #####:  101:    List* f = sortareNume(list);
    %%%%%:  101-block  0
call    0 never executed
    #####:  102:    for(int i=f->dimensiune-1;i>=0;i--)
    %%%%%:  102-block  0
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  103:    {
    #####:  104:        Medicament* m = get(f,i);
    %%%%%:  104-block  0
call    0 never executed
    #####:  105:        printf("Id: %d; Nume: %s; Concentratie: %f; Stoc: %d\n", m->id, m->nume,m->concentratie, m->stoc);
call    0 never executed
        -:  106:    }
        -:  107:
    #####:  108:    destroyList(f);
    %%%%%:  108-block  0
call    0 never executed
    #####:  109:}
        -:  110:
function sortStocCresc called 0 returned 0% blocks executed 0%
    #####:  111:void sortStocCresc(Farmacie* list)
        -:  112:{
    #####:  113:    List* f = sortareStoc(list);
    %%%%%:  113-block  0
call    0 never executed
    #####:  114:    for(int i=0;i<f->dimensiune;i++)
    %%%%%:  114-block  0
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  115:    {
    #####:  116:        Medicament* m = get(f,i);
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:        printf("Id: %d; Nume: %s; Concentratie: %f; Stoc: %d\n", m->id, m->nume,m->concentratie, m->stoc);
call    0 never executed
        -:  118:    }
        -:  119:
    #####:  120:    destroyList(f);
    %%%%%:  120-block  0
call    0 never executed
    #####:  121:}
        -:  122:
function sortStocDesc called 0 returned 0% blocks executed 0%
    #####:  123:void sortStocDesc(Farmacie* list)
        -:  124:{
    #####:  125:    List* f = sortareStoc(list);
    %%%%%:  125-block  0
call    0 never executed
    #####:  126:    for(int i=f->dimensiune-1;i>=0;i--)
    %%%%%:  126-block  0
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  127:    {
    #####:  128:        Medicament* m = get(f,i);
    %%%%%:  128-block  0
call    0 never executed
    #####:  129:        printf("Id: %d; Nume: %s; Concentratie: %f; Stoc: %d\n", m->id, m->nume,m->concentratie, m->stoc);
call    0 never executed
        -:  130:    }
    #####:  131:    destroyList(f);
    %%%%%:  131-block  0
call    0 never executed
    #####:  132:}
        -:  133:
function filtrareStoc called 0 returned 0% blocks executed 0%
    #####:  134:void filtrareStoc(Farmacie* list)
        -:  135:{
    #####:  136:    printf("Dati o valoare intrega, pozitiva, nenula:\n");
    %%%%%:  136-block  0
call    0 never executed
        -:  137:    int val;
    #####:  138:    scanf("%d",&val);
call    0 never executed
        -:  139:    //List* f = filterStoc(list, val);
    #####:  140:    List* f= filterFarmacie(list->lista,filterstoc,&val);
call    0 never executed
    #####:  141:    for(int i=0;i<f->dimensiune;i++)
    %%%%%:  141-block  0
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  142:    {
    #####:  143:        Medicament* m = get(f,i);
    %%%%%:  143-block  0
call    0 never executed
    #####:  144:        printf("Id: %d; Nume: %s; Concentratie: %f; Stoc: %d\n", m->id, m->nume,m->concentratie, m->stoc);
call    0 never executed
        -:  145:    }
        -:  146:
    #####:  147:    destroyList(f);
    %%%%%:  147-block  0
call    0 never executed
        -:  148:
    #####:  149:}
        -:  150:
function filtrareNume called 0 returned 0% blocks executed 0%
    #####:  151:void filtrareNume(Farmacie* list)
        -:  152:{
    #####:  153:    printf("Dati o litera:");
    %%%%%:  153-block  0
call    0 never executed
        -:  154:    char litera[2];
    #####:  155:    scanf("%s",litera);
call    0 never executed
        -:  156:    //List* f = filterNume(list, litera[0]);
    #####:  157:    List* f= filterFarmacie(list->lista,filternume,&litera[0]);
call    0 never executed
    #####:  158:    for(int i=0;i<f->dimensiune;i++)
    %%%%%:  158-block  0
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  159:    {
    #####:  160:        Medicament* m = get(f,i);
    %%%%%:  160-block  0
call    0 never executed
    #####:  161:        printf("Id: %d; Nume: %s; Concentratie: %f; Stoc: %d\n", m->id, m->nume,m->concentratie, m->stoc);
call    0 never executed
        -:  162:    }
        -:  163:
    #####:  164:    destroyList(f);
    %%%%%:  164-block  0
call    0 never executed
    #####:  165:}
function filtrareConcentratie called 0 returned 0% blocks executed 0%
    #####:  166:void filtrareConcentratie(Farmacie* list)
        -:  167:{
    #####:  168:    printf("Dati o valoare pozitiva nenula:\n");
    %%%%%:  168-block  0
call    0 never executed
        -:  169:    float val;
    #####:  170:    scanf("%f",&val);
call    0 never executed
        -:  171:    //List* f = filterConcentratie(list, val);
    #####:  172:    List* f= filterFarmacie(list->lista,filterconcentratie,&val);
call    0 never executed
    #####:  173:    for(int i=0;i<f->dimensiune;i++)
    %%%%%:  173-block  0
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  174:    {
    #####:  175:        Medicament* m = get(f,i);
    %%%%%:  175-block  0
call    0 never executed
    #####:  176:        printf("Id: %d; Nume: %s; Concentratie: %f; Stoc: %d\n", m->id, m->nume,m->concentratie, m->stoc);
call    0 never executed
        -:  177:    }
    #####:  178:    destroyList(f);
    %%%%%:  178-block  0
call    0 never executed
    #####:  179:}
function undo called 0 returned 0% blocks executed 0%
    #####:  180:void undo(Farmacie* list)
        -:  181:{
    #####:  182:    int successful = Undo(list);
    %%%%%:  182-block  0
call    0 never executed
    #####:  183:    if (successful)
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  184:        printf("Undo realizat cu succes.\n");
    %%%%%:  184-block  0
call    0 never executed
        -:  185:    else
    #####:  186:        printf("Nu se mai poate face undo.\n");
    %%%%%:  186-block  0
call    0 never executed
    #####:  187:}
function run called 1 returned 100% blocks executed 61%
        1:  188:void run()
        -:  189:{
        -:  190:
        1:  191:    Farmacie list = createFarmacie();
        1:  191-block  0
call    0 returned 1
        -:  192:
        -:  193:    while(1)
    #####:  194:    {
        -:  195:        int cmd;
        1:  196:        printf("0. Exit; 1. Adaugare; 2. Modificare; 3.Stergere; 4.Afisare farmacie;\n"
        1:  196-block  0
call    0 returned 1
        -:  197:               "5. Sortare nume crescator; 6. Sortare nume descrescator; 7. Sortare stoc crescator;\n"
        -:  198:               "8. Sortare stoc descrescator; 9. Filtrare stoc; 10. Filtrare concentratie; 11. Filtrare nume\n"
        -:  199:               "12. Undo\n");
        1:  200:        scanf("%d",&cmd);
call    0 returned 1
        1:  201:        if(cmd == 1)
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  202:            readMed(&list);
    %%%%%:  202-block  0
call    0 never executed
        1:  203:        else if(cmd == 2)
        1:  203-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  204:            updateMed(&list);
    %%%%%:  204-block  0
call    0 never executed
        1:  205:        else if(cmd == 3)
        1:  205-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  206:           deleteMed(&list);
    %%%%%:  206-block  0
call    0 never executed
        1:  207:        else if(cmd == 4)
        1:  207-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  208:            printFarmacie(&list);
    %%%%%:  208-block  0
call    0 never executed
        1:  209:        else if(cmd == 5)
        1:  209-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  210:            sortNumeCresc(&list);
    %%%%%:  210-block  0
call    0 never executed
        1:  211:        else if(cmd == 6)
        1:  211-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  212:            sortNumeDesc(&list);
    %%%%%:  212-block  0
call    0 never executed
        1:  213:        else if(cmd == 7)
        1:  213-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  214:            sortStocCresc(&list);
    %%%%%:  214-block  0
call    0 never executed
        1:  215:        else if(cmd == 8)
        1:  215-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  216:            sortStocDesc(&list);
    %%%%%:  216-block  0
call    0 never executed
        1:  217:        else if(cmd == 9)
        1:  217-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  218:            filtrareStoc(&list);
    %%%%%:  218-block  0
call    0 never executed
        1:  219:        else if(cmd == 10)
        1:  219-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  220:            filtrareConcentratie(&list);
    %%%%%:  220-block  0
call    0 never executed
        1:  221:        else if(cmd == 11)
        1:  221-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  222:            filtrareNume(&list);
    %%%%%:  222-block  0
call    0 never executed
        1:  223:        else if(cmd == 12)
        1:  223-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  224:            undo(&list);
    %%%%%:  224-block  0
call    0 never executed
        1:  225:        else if(cmd==0)
        1:  225-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        -:  226:            {
        1:  227:                break;
        -:  228:            }
        -:  229:    }
        -:  230:
        1:  231:    destroy(&list);
        1:  231-block  0
call    0 returned 1
        -:  232:
        1:  233:}
        -:  234:
function main called 1 returned 100% blocks executed 100%
        1:  235:int main()
        -:  236:{
        -:  237:
        1:  238:    runAllTests();
        1:  238-block  0
call    0 returned 1
        -:  239:
        -:  240:
        1:  241:    run();
call    0 returned 1
        -:  242:
        1:  243:    return 0;
        -:  244:}
