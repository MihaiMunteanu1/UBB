        -:    0:Source:C:/Users/munte/CLionProjects/OOP-LAB-6-7BUUUN/testeVD.cpp
        -:    0:Graph:C:\Users\munte\CLionProjects\OOP-LAB-6-7BUUUN\cmake-build-debug-coverage\CMakeFiles\OOP_LAB_6_7.dir\main.cpp.gcno
        -:    0:Data:C:\Users\munte\CLionProjects\OOP-LAB-6-7BUUUN\cmake-build-debug-coverage\CMakeFiles\OOP_LAB_6_7.dir\main.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "Activitate.h"
        -:    2:#include <vector>
        -:    3:using std::vector;
        -:    4:/*
        -:    5:  Functie folosit in teste
        -:    6:  primeste vector prin valoare -> copy constructor
        -:    7:  returneaza prin valoare -> copy constructor sau move constructor
        -:    8:*/
        -:    9:template <typename MyVector>
function _Z15testCopyIterateI13VectorDinamicI10ActivitateEET_S3_ called 1 returned 100% blocks executed 55%
        1:   10:MyVector testCopyIterate(MyVector v) {
        1:   10-block  0
        5:   11:    Activitate a{"Baschet","Dribbling","miscare",2};
        1:   11-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   11-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   11-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   11-block  3
call    9 returned 1
call   10 returned 1
call   11 returned 1
call   12 returned 1
    $$$$$:   11-block  4
    $$$$$:   11-block  5
    $$$$$:   11-block  6
call   13 never executed
    $$$$$:   11-block  7
    $$$$$:   11-block  8
    $$$$$:   11-block  9
call   14 never executed
    $$$$$:   11-block 10
    $$$$$:   11-block 11
        1:   12:    v.add(a);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        2:   13:    return v;
        1:   13-block  0
call    0 returned 1
        1:   13-block  1
        1:   14:}
call    0 returned 1
    $$$$$:   14-block  0
call    1 never executed
        -:   15:
        -:   16:template <typename MyVector>
function _Z13addActivitatiI13VectorDinamicI10ActivitateEEvRT_i called 5 returned 100% blocks executed 53%
        5:   17:void addActivitati(MyVector& v, int cate) {
      455:   18:    for (int i = 0; i<cate; i++) {
        5:   18-block  0
      450:   18-block  1
call    0 returned 450
      455:   18-block  2
branch  1 taken 450
branch  2 taken 5 (fallthrough)
    $$$$$:   18-block  3
call    3 never executed
      450:   19:        Activitate a{ std::to_string(i) + "_titlu",std::to_string(i) + "_descriere",
      450:   19-block  0
call    0 returned 450
call    1 returned 450
branch  2 taken 450 (fallthrough)
branch  3 taken 0 (throw)
      450:   19-block  1
call    4 returned 450
call    5 returned 450
branch  6 taken 450 (fallthrough)
branch  7 taken 0 (throw)
      450:   19-block  2
call    8 returned 450
call    9 returned 450
branch 10 taken 450 (fallthrough)
branch 11 taken 0 (throw)
      450:   19-block  3
call   12 returned 450
call   13 returned 450
call   14 returned 450
call   15 returned 450
call   16 returned 450
call   17 returned 450
call   18 returned 450
    $$$$$:   19-block  4
call   19 never executed
    $$$$$:   19-block  5
    $$$$$:   19-block  6
    $$$$$:   19-block  7
call   20 never executed
    $$$$$:   19-block  8
call   21 never executed
    $$$$$:   19-block  9
    $$$$$:   19-block 10
    $$$$$:   19-block 11
call   22 never executed
    $$$$$:   19-block 12
call   23 never executed
    $$$$$:   19-block 13
    $$$$$:   19-block 14
        -:   20:                      std::to_string(i)+"_tip",i};
      450:   21:        v.add(a);
call    0 returned 450
branch  1 taken 450 (fallthrough)
branch  2 taken 0 (throw)
        -:   22:    }
        5:   23:}
        5:   23-block  0
        -:   24:
        -:   25:/*
        -:   26:Testare constructori / assignment
        -:   27:E template pentru a refolosi la diferite variante de VectorDinamic din proiect
        -:   28:*/
        -:   29:template <typename MyVector>
function _Z20testCreateCopyAssignI13VectorDinamicI10ActivitateEEvv called 1 returned 100% blocks executed 61%
        1:   30:void testCreateCopyAssign() {
        1:   31:    MyVector v;//default constructor
        1:   31-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   32:    addActivitati(v, 100);
        1:   32-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   33:    assert(v.size() == 100);
        1:   33-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   33-block  1
call    3 never executed
        1:   33-block  2
       1*:   34:    assert(v.get(50).get_titlu() == "50_titlu");
        1:   34-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   34-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   34-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   34-block  3
call    9 never executed
        1:   34-block  4
        1:   34-block  5
branch 10 taken 1 (fallthrough)
branch 11 taken 0
        1:   34-block  6
call   12 returned 1
    $$$$$:   34-block  7
branch 13 never executed (fallthrough)
branch 14 never executed
    $$$$$:   34-block  8
call   15 never executed
    $$$$$:   34-block  9
        -:   35:
        1:   36:    MyVector v2{ v };//constructor de copiere
        1:   36-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   37:    assert(v2.size() == 100);
        1:   37-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   37-block  1
call    3 never executed
        1:   37-block  2
       1*:   38:    assert(v2.get(50).get_titlu() == "50_titlu");
        1:   38-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   38-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   38-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   38-block  3
call    9 never executed
        1:   38-block  4
        1:   38-block  5
branch 10 taken 1 (fallthrough)
branch 11 taken 0
        1:   38-block  6
call   12 returned 1
    $$$$$:   38-block  7
branch 13 never executed (fallthrough)
branch 14 never executed
    $$$$$:   38-block  8
call   15 never executed
    $$$$$:   38-block  9
        -:   39:
        1:   40:    MyVector v3;//default constructor
        1:   40-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   41:    v3 = v;//operator=   assignment
        1:   41-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   42:    assert(v3.size() == 100);
        1:   42-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   42-block  1
call    3 never executed
        1:   42-block  2
       1*:   43:    assert(v3.get(50).get_titlu() == "50_titlu");
        1:   43-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   43-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   43-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   43-block  3
call    9 never executed
        1:   43-block  4
        1:   43-block  5
branch 10 taken 1 (fallthrough)
branch 11 taken 0
        1:   43-block  6
call   12 returned 1
    $$$$$:   43-block  7
branch 13 never executed (fallthrough)
branch 14 never executed
    $$$$$:   43-block  8
call   15 never executed
    $$$$$:   43-block  9
        -:   44:
        1:   45:    auto v4 = testCopyIterate(v3);
        1:   45-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   45-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   45-block  2
call    6 returned 1
    $$$$$:   45-block  3
call    7 never executed
    $$$$$:   45-block  4
       1*:   46:    assert(v4.size() == 101);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   46-block  0
call    3 never executed
        1:   46-block  1
       1*:   47:    assert(v4.get(50).get_titlu() == "50_titlu");
        1:   47-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   47-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   47-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   47-block  3
call    9 never executed
        1:   47-block  4
        1:   47-block  5
branch 10 taken 1 (fallthrough)
branch 11 taken 0
        1:   47-block  6
call   12 returned 1
    $$$$$:   47-block  7
branch 13 never executed (fallthrough)
branch 14 never executed
    $$$$$:   47-block  8
call   15 never executed
    $$$$$:   47-block  9
        1:   48:}
        1:   48-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
    $$$$$:   48-block  1
call    4 never executed
    $$$$$:   48-block  2
call    5 never executed
    $$$$$:   48-block  3
call    6 never executed
    $$$$$:   48-block  4
call    7 never executed
        -:   49:
        -:   50:/*
        -:   51:  Test pentru move constructor si move assgnment
        -:   52:*/
        -:   53:template <typename MyVector>
function _Z23testMoveConstrAssgnmentI13VectorDinamicI10ActivitateEEvv called 1 returned 100% blocks executed 62%
        1:   54:void testMoveConstrAssgnment() {
        1:   55:    std::vector<MyVector> v;
        1:   55-block  0
call    0 returned 1
        -:   56:    //adaugam un vector care este o variabila temporara
        -:   57:    //se v-a apela move constructor
        1:   58:    v.push_back(MyVector{});
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   58-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   58-block  1
call    6 returned 1
    $$$$$:   58-block  2
call    7 never executed
    $$$$$:   58-block  3
        -:   59:
        -:   60:    //inseram, la fel se apeleaza move costructor de la vectorul nostru
        1:   61:    v.insert(v.begin(),MyVector{});
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   61-block  0
call    3 returned 1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   61-block  1
call    8 returned 1
    $$$$$:   61-block  2
    $$$$$:   61-block  3
    $$$$$:   61-block  4
call    9 never executed
    $$$$$:   61-block  5
        -:   62:
       1*:   63:    assert(v.size() == 2);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   63-block  0
call    3 never executed
        1:   63-block  1
        -:   64:
        1:   65:    MyVector v2;
        1:   65-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   66:    addActivitati(v2, 50);
        1:   66-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   67:
        1:   68:    v2 = MyVector{};//move assignment
        1:   68-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   68-block  1
call    3 returned 1
call    4 returned 1
    $$$$$:   68-block  2
        -:   69:
       1*:   70:    assert(v2.size() == 0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   70-block  0
call    3 never executed
        1:   70-block  1
        -:   71:
        1:   72:}
        1:   72-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:   72-block  1
call    2 never executed
    $$$$$:   72-block  2
call    3 never executed
        -:   73:template <typename MyVector>
function _Z22testAssignmentOperatorI13VectorDinamicI10ActivitateEEvv called 1 returned 100% blocks executed 71%
        1:   74:void testAssignmentOperator() {
        1:   75:    MyVector v;
        1:   75-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   76:    addActivitati(v, 100);
        1:   76-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   77:    MyVector v2=v;
        1:   77-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   78:    v=v;
        1:   78-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   79:    assert(v.size()==v2.size());
        1:   79-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:   79-block  1
call    4 never executed
        1:   79-block  2
        1:   80:}
        1:   80-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:   80-block  1
call    2 never executed
    $$$$$:   80-block  2
call    3 never executed
        -:   81:template <typename MyVector>
function _Z26testMoveAssignmentOperatorI13VectorDinamicI10ActivitateEEvv called 1 returned 100% blocks executed 73%
        1:   82:void testMoveAssignmentOperator() {
        1:   83:    MyVector v;
        1:   83-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   84:    addActivitati(v, 100);
        1:   84-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   85:    MyVector v2=std::move(v);
        1:   85-block  0
call    0 returned 1
call    1 returned 1
        1:   86:    v=std::move(v);
call    0 returned 1
call    1 returned 1
       1*:   87:    assert(v.size()==0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   87-block  0
call    3 never executed
        1:   87-block  1
       1*:   88:    assert(v2.size()==100);
        1:   88-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   88-block  1
call    3 never executed
        1:   88-block  2
        1:   89:}
        1:   89-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:   89-block  1
call    2 never executed
    $$$$$:   89-block  2
call    3 never executed
        -:   90:template <typename MyVector>
function _Z12testStergereI13VectorDinamicI10ActivitateEEvv called 1 returned 100% blocks executed 67%
        1:   91:void testStergere() {
        1:   92:    MyVector v;
        1:   92-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   93:    addActivitati(v, 100);
        1:   93-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   94:    v.sterge(50);
        1:   94-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   95:    assert(v.size() == 99);
        1:   95-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   95-block  1
call    3 never executed
        1:   95-block  2
       1*:   96:    assert(v.get(50).get_titlu() == "51_titlu");
        1:   96-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   96-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   96-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   96-block  3
call    9 never executed
        1:   96-block  4
        1:   96-block  5
branch 10 taken 1 (fallthrough)
branch 11 taken 0
        1:   96-block  6
call   12 returned 1
    $$$$$:   96-block  7
branch 13 never executed (fallthrough)
branch 14 never executed
    $$$$$:   96-block  8
call   15 never executed
    $$$$$:   96-block  9
        1:   97:}
        1:   97-block  0
call    0 returned 1
    $$$$$:   97-block  1
call    1 never executed
        -:   98:template <typename MyVector>
function _Z18testeVectorDinamicI13VectorDinamicI10ActivitateEEvv called 1 returned 100% blocks executed 100%
        1:   99:void testeVectorDinamic() {
        1:  100:    testStergere<MyVector>();
        1:  100-block  0
call    0 returned 1
        1:  101:    testMoveAssignmentOperator<MyVector>();
call    0 returned 1
        1:  102:    testAssignmentOperator<MyVector>();
call    0 returned 1
        1:  103:    testCreateCopyAssign<MyVector>();
call    0 returned 1
        1:  104:    testMoveConstrAssgnment<MyVector>();
call    0 returned 1
        1:  105:}
